import copy
import sys

def run(securities):

	for security in securities:
		if security['Updated']==True:
			#then we need to run a search from this point
			trade={}
			trade['Price']=0
			trade['UnmatchedLegs']=[]
			securitiesToPass = copy.deepcopy(securities)
			recursiveSearch(trade, security, securitiesToPass, 0)

def recursiveSearch(trade, security, securities, depth):	
	if len(trade['UnmatchedLegs'])==0:
		#then we're doing this for the first time
		trade['UnmatchedLegs']=copy.deepcopy(security['Legs'])
		trade['Price']=security['Price']
		trade['Securities']=[]
		trade['Securities'].append(security['Legs'])
	else:
		#try to match this security to the unmatched legs
		
		assert len(security['Legs'])==1 or len(security['Legs'])==2
		assert len(trade['UnmatchedLegs'])==1 or len(trade['UnmatchedLegs'])==2
		
		#outright
		if len(security['Legs'])==1:
			if security['Legs'][0]==reverseLeg(trade['UnmatchedLegs'][0]):
				trade['UnmatchedLegs'].pop(0)
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])
			elif len(trade['UnmatchedLegs'])==2 and security['Legs'][0]==reverseLeg(trade['UnmatchedLegs'][1]):
				trade['UnmatchedLegs'].pop(1)
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])

		#spread
		elif len(security['Legs'])==2:
			if security['Legs'][0]==reverseLeg(trade['UnmatchedLegs'][0]):
				trade['UnmatchedLegs'].pop(0)
				trade['UnmatchedLegs'].append(security['Legs'][1])
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])
			elif security['Legs'][1]==reverseLeg(trade['UnmatchedLegs'][0]):
				trade['UnmatchedLegs'].pop(0)
				trade['UnmatchedLegs'].append(security['Legs'][0])
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])
			elif len(trade['UnmatchedLegs'])==2 and security['Legs'][0]==reverseLeg(trade['UnmatchedLegs'][1]):
				trade['UnmatchedLegs'].pop(1)
				trade['UnmatchedLegs'].append(security['Legs'][1])
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])
			elif len(trade['UnmatchedLegs'])==2 and security['Legs'][1]==reverseLeg(trade['UnmatchedLegs'][1]):
				trade['UnmatchedLegs'].pop(1)
				trade['UnmatchedLegs'].append(security['Legs'][0])
				trade['Price']=trade['Price']+security['Price']
				trade['Securities'].append(security['Legs'])
		
	# Check if we're done
	if len(trade['UnmatchedLegs'])==0:
		print('Found a trade for ' + str(trade['Price']) + ' with depth ' + str(depth) + '.  ' + str(trade['Securities']))
		return

	if len(trade['UnmatchedLegs'])==2:
		print(security)
		print(securities)
		print(depth)
		sys.stdout.flush()
		
	securitiesToPass = copy.deepcopy(securities)
	index = securitiesToPass.index(security)
	securitiesToPass.pop(index)

	for securityToPass in securitiesToPass:
		recursiveSearch(trade, securityToPass, securitiesToPass, depth+1)

def reverseLeg(leg):
	if leg[0]=='+':
		return leg.replace('+','-')
	elif leg[0]=='-':
		return leg.replace('-','+')
	else:
		print('Something is wrong with this leg.')
		exit()