def reformat(orderbook, myFixParser):
	'''
	Returns a simple orderbook with:
		only the top of the order book, dropping all other entries.
		eliminates the distinction between bid and ask, instead expressing everything as an individual security such as +SIK2 with a price.
	'''
	
	simpleOrderbook=[]
	
	for securityDesc in orderbook:
		security={}

		security['LEGS']=securityDesc.split('-')
		security['LEGS'][0]='+' + security['LEGS'][0]
		if len(security['LEGS'])>1:
			security['LEGS'][1]='-' + security['LEGS'][1]
		
		### insert logic to handle butterflies later (Silver doesn't seem to have these, or maybe that's in another file)
		if len(security['LEGS'])==3:
			print('Got a butterfly')
		
		# leave the signs for the offer.
		try:
			topOfBook[securityDesc]['OFFER']=float(myFixParser.getField(270,orderbook[securityDesc]['OFFER'][0]))
		except TypeError:
			topOfBook[securityDesc]['OFFER']=None
		
		# reverse the signs for the bid
		try:
			topOfBook[securityDesc]['BID']=float(myFixParser.getField(270,orderbook[securityDesc]['BID'][0]))
		except TypeError:
			topOfBook[securityDesc]['BID']=None

			
		# if the bid/ask is null, delete it
		if not topOfBook[securityDesc]['BID'] and not topOfBook[securityDesc]['OFFER']:
			topOfBook.pop(securityDesc)
		
	return topOfBook

def printSimpleOrderbook(simpleOrderbook):
	for securityDesc in simpleOrderbook:
		if simpleOrderbook[securityDesc]['BID'] or simpleOrderbook[securityDesc]['OFFER']:
			print(securityDesc)
			print(simpleOrderbook[securityDesc]['LEGS'])
			print('OFFER ' + str(simpleOrderbook[securityDesc]['OFFER']))
			print('BID ' + str(simpleOrderbook[securityDesc]['BID']))
			print('')
